
/**
 *  List<?>
 *  어떠한 List를 사용하건 기능은 동일하나 성능의 차이만 존재한다.
 *
 *  ArrayList : 배열 기반(확장 시 속도는 Linked 보다 느리다)
 *  LinkedList : 연결 기반
 *
 *  배열은 삭제 시 앞당기는 과정이 필요하기 때문에 작업 시간이 증가한다.
 *  링크드 방식은 연결 주소지만 옮기면 되기 때문에
 *  자료구조 내에서 삭제 작업이 배열보다 유리하다.
 *
 *  배열의 장점 : 저장된 인스턴스의 참조가 빠르다(인덱스 기준이기 때문에)
 *  배열의 단점 : 저장 공간을 늘리는 과정에서 시간이 엄청 소요된다.
 *             인스턴스의 삭제 과정에서 많은 연산이 필요하다.
 *
 *  링크드 장점 : 저장 공간을 늘리는 과정이 간단하다.(연결 주소지만 옮겨주면 되기 때문)
 *             저장 인스턴스의 삭제 과정이 단순하다.(연결 주소지만 옮겨주면 되기 때문)
 *  링크드 단점 : 저장된 인스턴스의 참조 과정이 배열에 비해 복잡하다. > 느리다
 *             인덱스 기준이 아닌 연결 '첫 주소지' 기준으로 부터 주소지를 쫓아가기 때문에
 * */