
데이터베이스 트랜잭션(Transaction)
 - All or Nothing(All Commit Or All Rollback)
 - 단일한 논리적인 작업 단위(a single logical unit of work)
 - 여러 SQL문들을 단일 작업으로 묶어서 나눠질 수 없게 만든 것이 translation
 - commit은 DB에 영구적으로 저장하라 & transaction 종료의 의미
 - Spring or Spring boot @Transactional 어노테이션 활용

Atomicity(원자성) : Transaction은 논리적으로 쪼개질 수 없는 작업 단위이기 때문에
                               All or Nothing의 성격을 갖는다.
Consistency
Isolation
Durability

ㅁ 상속(extends) : 연관된 일련의 클래스들에 대해 공통적인 규약을 정의할 수 있습니다.
		     상속에 대한 오해로 클래스의 재활용을 위한 디자인이 아닙니다.

ㅁ 정보은닉(캡슐화) : 제네릭과 비슷하게 논리적 오류를 발생시키지 않기 위해 문법적 오류를 발생시켜 컴파일 단계에서 에러를 검출할 수 있도록 클래스 내의 멤버 변수에 정보 은닉을 해줘야 합니다.
		1) private : 클래스 내부에서만 접근할 수 있습니다. 따라서 값을 초기화하기 위해서는
			     public한 getter/setter 메소드를 통해서만 진행하도록 합니다.
		2) 